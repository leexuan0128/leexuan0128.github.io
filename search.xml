<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>R语言实例</title>
      <link href="/2018/06/05/R%E8%AF%AD%E8%A8%80%E5%AE%9E%E4%BE%8B/"/>
      <url>/2018/06/05/R%E8%AF%AD%E8%A8%80%E5%AE%9E%E4%BE%8B/</url>
      <content type="html"><![CDATA[<h1 id="R语言实例之数据分析"><a href="#R语言实例之数据分析" class="headerlink" title="R语言实例之数据分析"></a>R语言实例之数据分析</h1><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fs08gpfrg1j30r00f70u2.jpg" alt=""></p><h2 id="什么是R语言"><a href="#什么是R语言" class="headerlink" title="什么是R语言"></a>什么是R语言</h2><p>R语言是用于统计分析、绘图的语言和操作环境。R是属于GNU系统的一个自由、免费、开源的软件，它是一个用于统计计算和统计制图的优秀工具。 R语言是主要用于统计分析、绘图的语言和操作环境。 R本来是由来自新西兰奥克兰大学的Ross Ihaka和Robert Gentleman 开发。 （也因此称为R）现在由“R开发核心团队”负责开发。 R是基于S语言的一个GNU项目，所以也可以当作S语言的一种实现，通常用S语言编写的代码都可以不作修改的在R环境下运行。 R的语法是来自Scheme。</p><h2 id="R语言能做什么"><a href="#R语言能做什么" class="headerlink" title="R语言能做什么"></a>R语言能做什么</h2><ul><li>R是科学计算的强大工具包。</li><li>R主要擅长统计分析方面工作。</li><li>R具有顶尖的绘图功能。</li><li>R的交互式数据分析功能强大且灵活。</li><li>R可以轻松地从多个数据源导入数据。</li><li>金融领域数据统计与计算的强大工具。</li><li>数据挖掘和机器学习领域的必备工具。<h2 id="为什么要用R语言"><a href="#为什么要用R语言" class="headerlink" title="为什么要用R语言"></a>为什么要用R语言</h2>R语言，前身是S语言，是一门统计学家发明的语言，所以事实上其天生善于完成统计运算，内置了太多统计相关函数，现在每时每刻都产生大量数据，从数据中抽取出信息，所以人们比以往任何时候更依赖于统计（因为….数据太多，根本看不多来，正确的统计分析至少可以简化）。当然，可视化也是重点，对数据涵盖的信息进行可视化。</li></ul><p>R语言，其实存在不少人包括我，觉得他其实并不太像一门编程语言。但是这并没有所谓，我个人认可的有偏颇的观点是：一门编程语言的流行，要么其设计优秀，要么具有稳定而活跃的社区。设计优秀与社区活跃可以是相辅相成，但事实上只要有活跃的社区，设计是否优秀可能暂时并没那么重要。</p><p>R语言，就是一个庞大的帝国，他其实是一个全家桶，封装了各种，也调用了各种，包括了Java，C，C++等等。对R语言的基本使用，其实就是用所谓的R包 （R package）。每一个R包的作者会把有用或者自己觉得有用的函数更或者对象封装起来，最后，对于我们使用者而言，就只要下载安装R包，然后准备数据和输入函数，得到结果。这一个R语言的使用逻辑简单到几乎所有人都会用，也非常适合完全没有计算机基础的研究工作者。</p><hr><blockquote><p>R语言以及集成开发环境RStudio的安装在此就不再赘述，各大博客，简书和知乎已经写的非常详细。直接进入今天的主题：R内置数据集USArrest的量化分析及可视化。</p></blockquote><h2 id="任务需求"><a href="#任务需求" class="headerlink" title="任务需求"></a>任务需求</h2><p>调用R内置数据集USArrests，该数据集包含1973年美国50个州的每10万人中谋杀、被捕、强奸犯罪的人数以及城市人口的增长率。根据数据集进行以下分析：</p><ol><li>绘出城市人口增长的线性图；</li><li>绘出谋杀和强奸人数占总被捕人数的条形图；</li><li>哪些州犯罪情况比较接近，相对适宜居住的州是哪些?(使用聚类分析)。</li></ol><p>R内置数据集USArrests中包含4个对象，分别是”Murder” ，”Assault”，”UrbanPop”和”Rape”。</p><p>将数据集赋值给a<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#调用数据集</div><div class="line">a &lt;- USArrests</div></pre></td></tr></table></figure></p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fs094zb47fj30cw0aw0tn.jpg" alt=""></p><p><strong>问题1</strong> 要求绘制出城市人口增长的线性图，即不同城市与UrbanPop数据的线性对应关系。</p><h2 id="设计思路"><a href="#设计思路" class="headerlink" title="设计思路"></a>设计思路</h2><p>我们可利用R中的初级绘图函数plot(x, y, …)，进行初步的数据点绘制。再利用plot()函数中的type参数，实现点与点之间的连线。选用type= “o “来进行点与点之间的连接。形成线形图。具体操作如下：</p><p>首先，查看一下plot函数的功能，plot()函数是R语言中初级绘图函数，其用法如下为：</p><blockquote><p>plot(x, y, …)</p></blockquote><p>参数说明：</p><ul><li>main:标题</li><li>xlab,ylab:x,y轴说明</li><li>xlim,ylim:x,y轴的刻度界限</li><li>col:描点的颜色</li><li>pch:描点的样式，19代号为实心圆点，也可以换成其他代号。</li><li>type:绘图形中数据的显示类型,</li></ul><p>type参数:</p><ul><li>type= “p “ 在图形中数据显示为点</li><li>type= “l “  在图形中数据显示为线</li><li>type= “b “ 在图形中数据显示为点和连接线</li><li>type= “o “ 在图形中数据点覆盖在线上</li><li>type= “h “ 在图形中数据显示为从点到x轴的垂直线</li><li>type= “s “ 在图形中数据显示为阶梯图</li><li>type= “n “ 在图形中数据不显示</li></ul><p>首先，我们绘出基本的数据点图:设置颜色col、横纵坐标轴名称、主标题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">#绘图</div><div class="line">plot(USArrests$UrbanPop,col = &quot;blue&quot;,xlab = &quot;city&quot;,ylab = &quot;UrbanPop Rate(%)&quot;,</div><div class="line">main = &quot;plot of urban population growth&quot;)</div></pre></td></tr></table></figure></p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fs096q9c59j30fe0b6gly.jpg" alt=""><br>接着对数据点连接成线,加入type= “o “，以及pch=19两个参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plot(USArrests$UrbanPop,col = &quot;blue&quot;,type = &quot;o&quot;,xaxt=&quot;n&quot;,pch = 19,</div><div class="line">     xlab = &quot;city&quot;,ylab = &quot;UrbanPop Rate(%)&quot;,main = &quot;plot of urban population growth&quot;)</div></pre></td></tr></table></figure></p><p>横坐标的数据点代表50个不同城市的人口增长率，所以考虑将横坐标名称替换成城市名字，这样更加符合要求，方便观看。这里需要用到一个axis()函数，来对坐标轴元素进行更改。首先我们在plot()函数中设置参数xaxt=”n”，取消原图x轴坐标。接着我们将数据集中的<code>row.names</code>对象赋值给<code>state.name</code>，代表城市名称，方便后续调用。</p><p>axis()函数用法为：<br><code>axis(side = NULL, at = NULL, ..., side, labels = NULL)</code></p><p>side为一个整数，用于指定图形中坐标轴的绘制方向。坐标轴按如下方式绘制：1下，2左，3上，4右。labels可以是一个逻辑值，表示是否要在刻度线上进行注释， 或要放在刻度线上作标签的一个字符或表达式向量。at参数需要提供相同长度向量范围，即x轴坐标范围。代码为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#调用数据集城市名称</div><div class="line">state.name = row.names(a)</div><div class="line">#定义x坐标轴</div><div class="line">axis(side = 1,at = 1:50,labels = state.name,las = 2)</div></pre></td></tr></table></figure></p><p>最终显示效果为：<br><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fs096ig35gj30fe0bw3zm.jpg" alt=""><br>问题1解决，仅仅用了4行代码就解决了问题，R语言实现起来是不是很方便呢。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#调用数据集</div><div class="line">a &lt;- USArrests</div><div class="line">#绘图</div><div class="line">plot(USArrests$UrbanPop,col = &quot;blue&quot;,type = &quot;o&quot;,xaxt=&quot;n&quot;,pch = 19,</div><div class="line">     xlab = &quot;city&quot;,ylab = &quot;UrbanPop Rate(%)&quot;,main = &quot;plot of urban population growth&quot;)</div><div class="line">#调用数据集城市名称</div><div class="line">state.name = row.names(a)</div><div class="line">#定义x坐标轴</div><div class="line">axis(side = 1,at = 1:50,labels = state.name,las = 2)</div></pre></td></tr></table></figure></p><p><strong>问题2</strong>要求绘出谋杀和强奸人数占总被捕人数的条形图。</p><h2 id="设计思路-1"><a href="#设计思路-1" class="headerlink" title="设计思路"></a>设计思路</h2><p>使用ggplot2包中<code>ggplot()</code>函数来绘制条形图较为方便。</p><p>首先，我们需要构造出data.frame类型的mydata数据集，其中包含谋杀、强奸、以及总被捕人数三个对象。总被捕人数为谋杀、强奸、袭击人数之和。创建对象d：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 被捕人数数据集</div><div class="line">d = USArrests[c(&apos;Murder&apos;,&apos;Rape&apos;,&apos;Assault&apos;)]</div></pre></td></tr></table></figure></p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fs0a6xehsgj308k0d13yu.jpg" alt=""><br>构造mydata对象：其中包含150条数据，3个对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#总被捕的人数</div><div class="line">b = a$Murder+a$Rape+a$Assault</div><div class="line">#创建data.frame型mydata</div><div class="line">city &lt;- state.name</div><div class="line">size &lt;- c(a$Murder,a$Rape,b)</div><div class="line">type &lt;- rep(c(&quot;Murder&quot;,&quot;Rape&quot;,&quot;Total&quot;),each=50)</div><div class="line">mydata &lt;- data.frame(type,city,size)</div></pre></td></tr></table></figure></p><p>接着使用ggplot()函数进行绘图，将谋杀、强奸、总被捕人数显示在一张柱形图中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># 加载ggplot2</div><div class="line">library(ggplot2)</div><div class="line">#绘图</div><div class="line">ggplot(mydata,aes(x=city,y=size,fill=type))+</div><div class="line">  geom_bar(stat = &quot;identity&quot;,position=&quot;dodge&quot;)+</div><div class="line">  theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))+</div><div class="line">  ggtitle(&quot;Murder and Rape Ratio&quot;)+</div><div class="line">  labs(subtitle = &apos;1973,Murder and rape account for the total number of arrests&apos;)+</div><div class="line">  geom_text(aes(label = size), vjust = -0.3,hjust = 0.6, colour = &quot;black&quot;, position = position_dodge(0.9), size = 2)</div></pre></td></tr></table></figure></p><p><code>aes()</code>函数中的fill参数设置为type，表示按type数据集中的对象进行分类填充,即Murder、Rape、Total。<br><code>geom_bar()</code>函数中的position参数为”dodge”，表示三个对象排列显示。<br><code>theme()</code>函数用来显示坐标轴信息，图中我们选择90度逆时针选择城市名称。<br><code>geom_text()</code>函数用来在条形图上标注数据，vjust和hjust用来调整数据位置。<code>position_dodge()</code>用来调整数据的大小<br><code>coord_flip()</code>用来旋转x y坐标轴<br>所绘图型为：<br><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fs096bb64hj31720pot94.jpg" alt=""><br>代码实现如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#总被捕的人数</div><div class="line">b = a$Murder+a$Rape+a$Assault</div><div class="line">#创建data.frame型mydata</div><div class="line">city &lt;- state.name</div><div class="line">size &lt;- c(a$Murder,a$Rape,b)</div><div class="line">type &lt;- rep(c(&quot;Murder&quot;,&quot;Rape&quot;,&quot;Total&quot;),each=50)</div><div class="line">mydata &lt;- data.frame(type,city,size)</div><div class="line"># 加载ggplot2</div><div class="line">library(ggplot2)</div><div class="line">#绘图</div><div class="line">ggplot(mydata,aes(x=city,y=size,fill=type))+</div><div class="line">  geom_bar(stat = &quot;identity&quot;,position=&quot;dodge&quot;)+</div><div class="line">  theme(axis.text.x = element_text(angle=90, hjust=1, vjust=.5))+</div><div class="line">  ggtitle(&quot;Murder and Rape Ratio&quot;)+</div><div class="line">  labs(subtitle = &apos;1973,Murder and rape account for the total number of arrests&apos;)+</div><div class="line">  geom_text(aes(label = size), vjust = -0.3,hjust = 0.6, colour = &quot;black&quot;, position = position_dodge(0.9), size = 2)</div></pre></td></tr></table></figure></p><p><strong>问题2</strong>主要是需要构造data.frame数据类型，接着对绘图函数中<code>fill</code>参数进行设置，用我们设置好的<code>Murder、Rape、Total</code>来进行填充,来显示三组数据。</p><p><strong>问题3</strong>要求我们使用聚类分析，来查看哪些州犯罪情况比较接近，得出相对适宜居住的州是哪些?</p><hr><h2 id="回顾一下聚类分析的知识点"><a href="#回顾一下聚类分析的知识点" class="headerlink" title="回顾一下聚类分析的知识点"></a>回顾一下聚类分析的知识点</h2><h3 id="聚类分析"><a href="#聚类分析" class="headerlink" title="聚类分析"></a>聚类分析</h3><p>聚类分析是统计中另一个非常重要的方法，可以帮助我们在多维度的数据中把相似的数据归为子集，每个子集中的数据都具有某种程度的相似性。在具体的生物研究中，聚类可以帮助我们通过表达类似的基因找到功能相关的基因，或者帮助推测未知基因的功能。通常聚类分析也被称作非监督机器学习。</p><p>进行聚类分析首先需要计算不同观测值之间的距离,进而生成聚类使用的距离矩阵。<br>计算距离的方法有很多，选择不同的距离计算方法也会对最终的聚类结果产生很大的影响。常用的距离计算方法有欧氏距离(Euclidean distance)、曼哈顿距离(Manhattan distance)和基于相关性距离(correlation-based distances)的Pearson correlation distances、Spearman’s rank correlation、Kendall correlation distance 等等。</p><p>另外，在构建距离矩阵之前，往往会对原始的观测数据进行标准化，如计算z score。</p><p>总的来说，聚类方法从整体上主要使用的有Partitioning method 和Hierarchical Clustering 两类，其中Partitioning 包括K-means clustering，K-medoids clustering(PAM)等具体方法。</p><h3 id="K-means"><a href="#K-means" class="headerlink" title="K-means"></a>K-means</h3><p>k-means<br>在k-means算法中，首先我们需要确定数据最终分为几类(k)，然后会根据分类数量随机选取k个点最为每个类的初始质心（这也是同一组数据每次聚类的结果都不尽相同的原因），随后其他的点都会通过欧式距离找到分到和自己最近的初始中心。通过一次这样的过程之后，再根据每个集合中的点计算均值得到新的质心，重复之前的过程进行迭代。每次迭代，每个集合中的质心都会重新产生，所有的非质心点再重新分配给新的质心形成集合。如果在一次迭代中，只有非常少的点会发生集合的转移则迭代停止。</p><p>需要注意的是，k-means聚类的方法对异常值非常敏感，与之相比PAM要好一些。</p><p>在R中，kmeans聚类可以使用stats包中的kmeans()函数，如果想使用K-medoids clustering 可以借助cluster包中的pam()函数。另外，在进行cluster和pca相关的分析中，factoextra 也是一个不错的选择，包括了各种常用的功能。</p><p>一个比较完整的k-means聚类分析过程主要包括数据标准化，评估合适cluster数数目，进行计算以及可视化展示等步骤。</p><h3 id="Hierarchical-Clustering"><a href="#Hierarchical-Clustering" class="headerlink" title="Hierarchical Clustering"></a>Hierarchical Clustering</h3><p>层次聚类和k-means相比不需要预先设定聚类的数目，最终的聚类结果会以颠倒树状结构显示，不同类别观测值在树的最底层（树叶），越向上节点越少。层次聚类可以细分为Agglomerative Clustering 和 Divisive Hierarchical，前者的思路是从“树叶”向“树干”聚集，后者的思路是从“树干”向“树叶”分裂。一般而言，Agglomerative Clustering 适合在clusters比较少时使用；而Divisive Hierarchical 适合在有大量clusters 时使用，可以选择到那一步停下不再细分。</p><p>以Agglomerative Clustering 为例，大致流程是首先将每个对象归为一类，每类仅包含一个对象，计算类与类之间的距离。找到最近的两个类然后合并, 接着计算新类与所有旧类之间的距离。重复之前的过程，直到最后合并成一个类为止。</p><p>根据类间距离计算方法的不同，又可以分为五种: single-linkage(类和类两组对象间的最小距离)、 complete-linkage(类和类两组对象间的最大距离)、 average-linkage(两组对象间的平均距离)、centroid linkage 和Ward′s method(在每一步使组内离差平方和增量最小)。</p><p>一个比较完整的层次聚类分析过程主要包括数据标准化，计算距离，构建聚类树，确定分组以及可视化展示等步骤。</p><p>在R中，计算距离时可以使用dist()函数，构建聚类树可以使用hclust()函数，将树分组可以使用cutree()。当然也可以使用cluster包同时完成上面几个步骤。</p><hr><h2 id="设计思路-2"><a href="#设计思路-2" class="headerlink" title="设计思路"></a>设计思路</h2><ul><li>构建标准化数据集</li><li>构建聚类树</li><li>使用k-means聚类所需的包<code>(factoextra),(dendextend)</code></li><li>对图形做进一步的美化</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">#标准化数据集usa_norm</div><div class="line">usa_norm &lt;- dist(scale(USArrests), method = &quot;euclidean&quot;)</div><div class="line"># 构建聚类树hc</div><div class="line">hc &lt;- hclust(usa_norm, method = &quot;complete&quot;)</div><div class="line"># 可视化展示</div><div class="line">install.packages(c(&quot;factoextra&quot;, &quot;dendextend&quot;))</div><div class="line">library(factoextra)</div><div class="line">#绘图</div><div class="line">plot(hc, hang = -1, cex = 0.8)</div></pre></td></tr></table></figure><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fs0963jo9xj30wc0jc3yj.jpg" alt=""><br>先绘出基本的聚类树图，将参数hang设置为-1，表示将x坐标城市名逆时针90度显示，方便观看。<br>接着进行聚类分组：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">#美化</div><div class="line">fviz_dend(hc, k = 4,      # 聚类分为4类</div><div class="line">          cex = 1,      # label大小，显示字体</div><div class="line">          k_colors = c(&quot;#2E9FDF&quot;, &quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),</div><div class="line">          color_labels_by_k = TRUE,  # 分组颜色标签</div><div class="line">          rect = TRUE, # 在周围添加矩形组</div><div class="line">          rect_fill = TRUE,</div><div class="line">          rect_border = c(&quot;#2E9FDF&quot;, &quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),</div><div class="line">          ggtheme = theme_void() # ggplot2的主题</div><div class="line">)</div></pre></td></tr></table></figure></p><p>得到绘图：<br><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fs095vv9usj30w20jdweq.jpg" alt=""><br>也可以改变显示方式为环形显示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># 环形显示结果</div><div class="line">fviz_dend(hc, cex = 1, k = 4,k_colors = &quot;jco&quot;, type = &quot;circular&quot;)</div></pre></td></tr></table></figure></p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fs095hpmpcj30w10j774x.jpg" alt=""><br>代码实现：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">#标准化数据集usa_norm</div><div class="line">usa_norm &lt;- dist(scale(USArrests), method = &quot;euclidean&quot;)</div><div class="line"># 构建树hc</div><div class="line">hc &lt;- hclust(usa_norm, method = &quot;complete&quot;)</div><div class="line"># 可视化展示</div><div class="line">install.packages(c(&quot;factoextra&quot;, &quot;dendextend&quot;))</div><div class="line">library(factoextra)</div><div class="line">#绘图</div><div class="line">plot(hc, hang = -1, cex = 0.8)</div><div class="line">#美化</div><div class="line">fviz_dend(hc, k = 4,      # 聚类分为4类</div><div class="line">          cex = 1,      # label大小，显示字体</div><div class="line">          k_colors = c(&quot;#2E9FDF&quot;, &quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),</div><div class="line">          color_labels_by_k = TRUE,  # 分组颜色标签</div><div class="line">          rect = TRUE, # 在周围添加矩形组</div><div class="line">          rect_fill = TRUE,</div><div class="line">          rect_border = c(&quot;#2E9FDF&quot;, &quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;),</div><div class="line">          ggtheme = theme_void() # ggplot2的主题</div><div class="line">)</div><div class="line"># 环形显示结果</div><div class="line">fviz_dend(hc, cex = 1, k = 4,k_colors = &quot;jco&quot;, type = &quot;circular&quot;)</div></pre></td></tr></table></figure></p><blockquote><p>通过这次实践，摆脱了单纯的理论知识学习状态，从安装环境到代码实现，整个过程的实践性很强，锻炼了解决实际问题的能力，同时也提高了我查阅参考资料，文档书写的水平。提高是有限的，但提高也是全面的。今后，我会加强Python和R的学习，扎实掌握这门技能，对于数据挖掘和数据分析的知识还需进一步摸索和学习。</p></blockquote><p>作者：leexuan<br>2018年06月05日</p>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LaTex快速入门</title>
      <link href="/2018/05/29/LaTex%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
      <url>/2018/05/29/LaTex%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h1 id="用LaTeX武装你的论文"><a href="#用LaTeX武装你的论文" class="headerlink" title="用LaTeX武装你的论文"></a>用LaTeX武装你的论文</h1><h2 id="gt-此篇为写给一些想快速入门-LaTeX-的朋友-熟练掌握之后，可以完全代替Word，Wps等软件。"><a href="#gt-此篇为写给一些想快速入门-LaTeX-的朋友-熟练掌握之后，可以完全代替Word，Wps等软件。" class="headerlink" title="&gt;此篇为写给一些想快速入门 LaTeX 的朋友.熟练掌握之后，可以完全代替Word，Wps等软件。"></a>&gt;此篇为写给一些想快速入门 LaTeX 的朋友.熟练掌握之后，可以完全代替Word，Wps等软件。</h2><p><img src="https://ws3.sinaimg.cn/large/006tNc79ly1frs9imdqjhj30h30d7dgk.jpg" alt=""></p><p>LaTeX 是个排版工具，快速使用并且活学活用才是硬道理。要相信只要得法， 其实 LaTeX 很简单，不要因为有一些 LaTeX 学习曲线很陡的说法而心生畏惧。  </p><h2 id="什么是LaTex"><a href="#什么是LaTex" class="headerlink" title="什么是LaTex"></a>什么是LaTex</h2><p>LaTeX，是一种基于TEX的排版系统，由美国电脑学家莱斯利·兰伯特在20世纪80年代初期开发，利用这种格式，即使用户没有排版和程序设计的知识也可以充分发挥由TEX所提供的强大功能，能在几天，甚至几小时内生成很多具有书籍质量的印刷品。对于生成复杂表格和数学公式，这一点表现得尤为突出。因此它非常适用于生成高印刷质量的科技和数学类文档。这个系统同样适用于生成从简单的信件到完整书籍的所有其他种类的文档。</p><p>简单点说：LaTeX 基于 TeX，主要目的是为了方便排版。在学术界的论文，尤其是数学、计算机等学科论文都是由 LaTeX 编写, 因为用它写数学公式非常漂亮。  </p><p>初期的话，我们可以选择一个 LaTeX 模板进行改造。不过第一次见到一些模板，可能会对其中很多文件的作用一头雾水. 下面是简单的介绍，详细内容可见<a href="https://liam0205.me/2015/01/23/literate-programming-in-latex/" target="_blank" rel="external">在 LaTeX 中进行文学编程</a>，当然更多介绍的话可以自行搜索。  </p><table><thead><tr><th style="text-align:center">LaTex常见文件类型</th><th style="text-align:center">功能介绍</th></tr></thead><tbody><tr><td style="text-align:center">.dtx</td><td style="text-align:center">Documented LaTeX sources,宏包重要部分</td></tr><tr><td style="text-align:center">.ins</td><td style="text-align:center">installation,控制 TeX 从 .dtx 文件里释放宏包文件</td></tr><tr><td style="text-align:center">.cfg</td><td style="text-align:center">config,配置文件,可由上面两个文件生成</td></tr><tr><td style="text-align:center">.sty</td><td style="text-align:center">style files,使用<code>\usepackage{...}</code>命令进行加载</td></tr><tr><td style="text-align:center">.cls</td><td style="text-align:center">classes files,类文件,使用<code>\documentclass{...}</code>命令进行加载</td></tr><tr><td style="text-align:center">.aux</td><td style="text-align:center">auxiliary,辅助文件,不影响正常使用</td></tr><tr><td style="text-align:center">.bst</td><td style="text-align:center">BibTeX style file,用来控制参考文献样式</td></tr></tbody></table><p>额外推荐阅读材料: 来自北京大学李东风老师的 <a href="http://www.math.pku.edu.cn/teachers/lidf/docs/textrick/tricks.pdf" target="_blank" rel="external">LaTeX 排版心得</a>.    </p><h2 id="安装LaTex环境"><a href="#安装LaTex环境" class="headerlink" title="安装LaTex环境"></a>安装LaTex环境</h2><p>1.安装LaTex：<br>由于个人使用的是Mac OS操作系统，需要安装MacTex，在此不做赘述。引用<a href="https://www.jianshu.com/p/7bbd54a89ac2" target="_blank" rel="external">简书</a>文章    </p><p>2.选择合适的编译器：<br>在安装好LaTeX环境以后，通常都会有一个自带的编辑器，比如 CTex 的WinEdt， MacTeX的TeXShop， 不过功能并不强大，好比 Windows 记事本，只有一些基本的文本编辑功能。<br>在这里推荐一个我觉得还不错的LaTeX编辑器：TeXstudio。我试过 WinEdt，TeXnicle，不过都比不上 TeXstudio。在 WinEdt 下面无法编译的文件，居然可以在 TeXstudio 中编译生成最终效果 (虽然 log 里面显示 error，但的确产生了效果)。总之，用 TeXstudio 就对了, 而且它是用 qt 写的，还跨平台。  </p><h2 id="开始第一个-LaTeX-文档"><a href="#开始第一个-LaTeX-文档" class="headerlink" title="开始第一个 LaTeX 文档"></a>开始第一个 LaTeX 文档</h2><p>打开 TeXstudio，新建一个 TeX 文件，写入以下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">\documentclass&#123;article&#125;</div><div class="line">\begin&#123;document&#125;</div><div class="line">Hello，LaTeX!</div><div class="line">\end&#123;document&#125;</div></pre></td></tr></table></figure></p><p>点击compile and view按钮，进行编译，即可看到结果。  </p><p>至此，一个极简易的 LaTeX 文档已经完成。以后要做的事情不过是多用多查，熟能生巧。此外记得找本 LaTeX 的书籍看一下，一来对于更为精细的知识做一个了解，二来可以作为工具书查询。我经常查的是 «LaTeX入门与提高 第二版»  </p><h2 id="LaTeX数学公式"><a href="#LaTeX数学公式" class="headerlink" title="LaTeX数学公式"></a>LaTeX数学公式</h2><p>学习 LaTeX 的一大初衷便是为了写漂亮的数学公式。而于我个人而言，数学公式的练习始于 markdown，很多 markdown 编辑器是支持 LaTeX 数学公式的，比如 haroopad。</p><p>以下内容直接在支持数学公式的 markdown 编辑器中即可操作，而且是即时显示效果，对新手很有帮助。如果使用 haroopad，请在 偏好设置 中 启用数学表达式。</p><p>学会写 LaTeX 公式，只需要了解 4 个概念：</p><p>1.数学公式环境。</p><p>LaTeX 的数学模式有两种：行内模式(inline)和行间模式(display)。前者在正文的行文中，插入数学公式；后者独立排列单独成行。</p><p>在行文中，使用 <code>$ ... $</code> 可以插入行内公式，使用 <code>$$ ... $$</code> 可以插入行间公式，如果需要对行间公式进行编号，可以使用 equation 环境.</p><p>2.控制序列。</p><p>凡是键盘不能够直接表示的符号或者起着特定作用的皆有命令，类似转义，叫做控制序列（control sequence）。比如求和符号<code>∑</code>对应的命令为 <code>\sum</code>.</p><p>3.上下标。</p><p><code>_{...}</code>表示下标，<code>^{...}</code>表示上标。它默认只作用于之后的一个字符，如果想对连续的几个字符起作用，请将这些字符用花括号<code>{}</code>括起来， 也就是下面分组的概念。</p><p>4.分组。</p><p>很简单，就是用<code>{...}</code>将内容包含起来视作整体，比如上下标很长的时候。遇到什么时候得到的效果不是预期，那么很可能你需要加个分组，也就是添个大括号<code>{...}</code>.  </p><table><thead><tr><th>LaTex公式命令</th><th style="text-align:center">预览效果</th></tr></thead><tbody><tr><td>\$ x_i $</td><td style="text-align:center">$ x_i $</td></tr><tr><td>\$ x^2 $</td><td style="text-align:center">$ x^2 $</td></tr><tr><td>\$ x^ {y^z}$</td><td style="text-align:center">$ x^ {y^z}$</td></tr><tr><td>\$ \int_a^b f(x)$</td><td style="text-align:center">$ \int_a^b f(x)$</td></tr><tr><td>\$ \frac ab $</td><td style="text-align:center">$ \frac ab $</td></tr></tbody></table><p>有了这几个概念以后，再动手写几个就大概懂了。无论多么复杂的公式都是有一个个简单的东西构成。推荐一个网站：<a href="https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="external">MathJax basic tutorial</a> .   </p><h2 id="LaTeX-资源推荐"><a href="#LaTeX-资源推荐" class="headerlink" title="LaTeX 资源推荐"></a>LaTeX 资源推荐</h2><ul><li><a href="http://detexify.kirelabs.org/classify.html" target="_blank" rel="external">Detexify LaTeX handwritten symbol recognition.</a><br>通过手写识别 LaTeX 符号，识别率很高。尤其是当看到一个符号却不知道其 LaTeX 命令的时候它很有用。只要画出记忆中符号的样子，就会自动出现各种可能想要的表示方法。  </li><li><a href="https://zh.numberempire.com/latexequationeditor.php" target="_blank" rel="external">LaTeX公式编辑器</a><br>对于尚不熟悉的人书写 LaTeX 公式提供一点便利。  </li><li><a href="https://cn.sharelatex.com/" target="_blank" rel="external">在线LaTeX编辑器shareLaTeX</a><br>好处就是不用本地搭建环境，有中文界面，直接在线操作。还有很多 LaTeX 模板可供选择。  </li></ul><hr><p>[@leexuan]<br>2018年5月29日</p>]]></content>
      
      <categories>
          
          <category> 心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTex </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Markdown语法笔记</title>
      <link href="/2018/05/29/Markdown%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
      <url>/2018/05/29/Markdown%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0/</url>
      <content type="html"><![CDATA[<h1 id="什么是Markdown"><a href="#什么是Markdown" class="headerlink" title="什么是Markdown"></a>什么是Markdown</h1><p><img src="https://ws4.sinaimg.cn/large/006tNc79gy1frs20gb2zjj30ci08cdfy.jpg" alt=""><br>Markdown语法主要分为如下几大部分： 标题，段落，区块引用，代码区块，强调，列表，分割线，链接，图片，反斜杠 \，  </p><h2 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a>1.标题</h2><h1 id="一级标题-1个-号加后续内容"><a href="#一级标题-1个-号加后续内容" class="headerlink" title="一级标题 1个#号加后续内容"></a>一级标题 1个#号加后续内容</h1><h2 id="二级标题-2个-号加后续内容"><a href="#二级标题-2个-号加后续内容" class="headerlink" title="二级标题 2个#号加后续内容"></a>二级标题 2个#号加后续内容</h2><h3 id="三级标题-3个-号加后续内容"><a href="#三级标题-3个-号加后续内容" class="headerlink" title="三级标题 3个#号加后续内容"></a>三级标题 3个#号加后续内容</h3><h4 id="四级标题-4个-号加后续内容"><a href="#四级标题-4个-号加后续内容" class="headerlink" title="四级标题 4个#号加后续内容"></a>四级标题 4个#号加后续内容</h4><h5 id="五级标题-5个-号加后续内容"><a href="#五级标题-5个-号加后续内容" class="headerlink" title="五级标题 5个#号加后续内容"></a>五级标题 5个#号加后续内容</h5><h6 id="六级标题-6个-号加后续内容"><a href="#六级标题-6个-号加后续内容" class="headerlink" title="六级标题 6个#号加后续内容"></a>六级标题 6个#号加后续内容</h6><h2 id="2-段落"><a href="#2-段落" class="headerlink" title="2.段落"></a>2.段落</h2><p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用两个以上空格加上回车（引用中换行省略回车）。</p><h2 id="3-区块引用"><a href="#3-区块引用" class="headerlink" title="3.区块引用"></a>3.区块引用</h2><blockquote><p>在段落的每行或者只在第一行使用符号&gt;,还可使用多个嵌套引用  </p></blockquote><h2 id="4-分割线"><a href="#4-分割线" class="headerlink" title="4.分割线"></a>4.分割线</h2><p>分割线最常使用就是三个或以上*，还可以使用-和_。  </p><h2 id="5-链接"><a href="#5-链接" class="headerlink" title="5.链接"></a>5.链接</h2><p>主要使用行内式：<code>[链接名](地址)</code><br>行内式：<a href="https:://www.baidu.com" title="baidu" target="_blank" rel="external">Markdown库</a>  </p><h2 id="6-图片"><a href="#6-图片" class="headerlink" title="6.图片"></a>6.图片</h2><p>和链接相同，在之前加上!即可:<code>![图名](地址)</code></p><p><img src="http://upload-images.jianshu.io/upload_images/259-0ad0d0bfc1c608b6.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="">) </p><hr><p>符号Markdown是一种方便记忆、书写的纯文本标记语言，用户可以在使用这些标记符号以最小的输入代价生成肌肤表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，<strong>粗体</strong>或者<em>斜体</em>某些文字，更棒的是，它还可以这样操作  </p><h3 id="1-制作一份待办事宜Todo列表"><a href="#1-制作一份待办事宜Todo列表" class="headerlink" title="1.制作一份待办事宜Todo列表"></a>1.制作一份待办事宜<a href="http://www.baidu.com" target="_blank" rel="external">Todo列表</a></h3><ul><li style="list-style: none"><input type="checkbox"> 支持已PDF格式导出文件  </li><li style="list-style: none"><input type="checkbox"> 改进Cmd渲染算法，使局部渲染技术提高效率  </li><li style="list-style: none"><input type="checkbox" checked> 新增Todo列表  </li><li style="list-style: none"><input type="checkbox" checked> 修复Latex公式渲染  </li></ul><h3 id="2-书写一个公式-latex"><a href="#2-书写一个公式-latex" class="headerlink" title="2.书写一个公式[^latex]"></a>2.书写一个公式[^latex]</h3><p>$$E=mc^22$$<br>$$\frac{x+y}{y+z}$$<br>$$\sum_{i=1}^n a_i=0$$</p><h3 id="3-高亮一段代码-code"><a href="#3-高亮一段代码-code" class="headerlink" title="3.高亮一段代码[^code]"></a>3.高亮一段代码[^code]</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">python</div><div class="line">@requires_authorization</div><div class="line">class SomeClass:</div><div class="line">    pass</div><div class="line"></div><div class="line">if __name__ == &apos;__main__&apos;:</div><div class="line">    # A comment</div><div class="line">    print &apos;hello world&apos;</div></pre></td></tr></table></figure><h3 id="4-高效绘制流程图"><a href="#4-高效绘制流程图" class="headerlink" title="4.高效绘制流程图"></a>4.高效绘制流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">st=&gt;start: Start</div><div class="line">op=&gt;operation: Continue</div><div class="line">cond=&gt;condition: Yes or No?</div><div class="line">e=&gt;end</div><div class="line">st-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;op</div></pre></td></tr></table></figure><h3 id="5-高效绘制表格"><a href="#5-高效绘制表格" class="headerlink" title="5.高效绘制表格"></a>5.高效绘制表格</h3><table><thead><tr><th>项目</th><th style="text-align:right">价格</th><th style="text-align:center">数量</th></tr></thead><tbody><tr><td>计算机</td><td style="text-align:right">\$1600</td><td style="text-align:center">5</td></tr><tr><td>手机</td><td style="text-align:right">\$12</td><td style="text-align:center">12</td></tr><tr><td>管线</td><td style="text-align:right">\$1</td><td style="text-align:center">234</td></tr></tbody></table><hr><p>再一次感谢您花费时间阅读这份文档！</p><p>作者 [leexuan]<br>2018 年 05月 28日</p><p>[^latex]: 支持 <strong>LaTeX</strong> 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$<br>[^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，<strong>四十一</strong>种主流编程语言。  </p>]]></content>
      
      <categories>
          
          <category> 心得 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ios11下的免费VPN搭建</title>
      <link href="/2017/10/03/ios11%E4%B8%8B%E5%85%8D%E8%B4%B9VPN%E7%9A%84%E6%90%AD%E5%BB%BA/"/>
      <url>/2017/10/03/ios11%E4%B8%8B%E5%85%8D%E8%B4%B9VPN%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="基于shadowsocks的ios11快速VPN搭建"><a href="#基于shadowsocks的ios11快速VPN搭建" class="headerlink" title="基于shadowsocks的ios11快速VPN搭建"></a>基于shadowsocks的ios11快速VPN搭建</h1><hr><blockquote><p>ios11更新后发现之前许多好用的vpn要么不是被和谐了，要么就是开始天价收费了。本着分享技术造福大众的精神，为大家分享一套<em>免费</em>的搭建shadowsocks的vpn操作。</p></blockquote><ul><li>本教程对无计算机基础的朋友同样友好，只需执行步骤，请放心食用，图片，文字都看完就OK啦。</li></ul><p>首先，我们需要一款下载一款叫做”SsrConnectPro”的app，如图：</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fk4vcvqey5j30r50iljsf.jpg" alt=""></p><blockquote><p>软件安全不放心可以自己去 github 网站下载。</p></blockquote><p>下载好后，打开app进行配置。界面是这样子的：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fk4vncn7mkj30bt0gn3yy.jpg" alt=""></p><p>点右上角+号，添加自定义配置。<br><em>重点来了</em>，一般情况下，此时我们要在app内输入购买的vpn账号密码等，而这一步我们要做的很简单，从<a href="https://get.freevs.org/" target="_blank" rel="external">freess</a>获取免费的账号密码及连接端口，如图：</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fk4vrxegelj30gu0ilaar.jpg" alt=""><br>选择FreeSS-Reset password 下的三个配置中的一个，优先US。(需要说明的是，每12小时系统会更换一次密码，所以我们要做的就是及时更新密码即可，这个免费的代价还是可以接受的)</p><blockquote><p>网站被查的很严，大家及时收藏新地址……</p></blockquote><p>回到app内，进行配置，如图：</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fk4vxictzwj30c00jmdgk.jpg" alt=""><br><img src="https://ws1.sinaimg.cn/large/006tKfTcly1fk4w2sr71zj30w309vaag.jpg" alt=""></p><ul><li>Type 默认不用管</li><li>Name 你的vpn名字，随便起。</li><li>Server 就是上图中的Adress(IP)</li><li>Port 同上</li><li>Password 同上</li><li>ProxyMethod 默认不管</li><li>Method 选择对应的，US就是chacha20，Japan就是rc4-md5</li></ul><p>点击save configuration，之后点击有黑色箭头那一行</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fk4w8a3et9j30bz07r3yj.jpg" alt=""></p><p>系统提示都点允许</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fk4w9fjen5j30bg0bn3z2.jpg" alt=""></p><p>至此，搭建vpn的步骤就完成啦，不用花一分钱，5分钟就可以搞定。</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fk4wj21uc0j30bw0j60sz.jpg" alt=""></p><blockquote><p>去浏览器输入google试试看能否登录。如果登录不上，回到app内，点击Ping按钮，再试一次就好啦。如果之前可以登录，第二天登录不上了，只需要去刚才的网址获取一下最新的密码即可。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ios11VPN </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>AS实现简易计算器</title>
      <link href="/2017/09/21/AS%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/"/>
      <url>/2017/09/21/AS%E5%AE%9E%E7%8E%B0%E7%AE%80%E6%98%93%E8%AE%A1%E7%AE%97%E5%99%A8/</url>
      <content type="html"><![CDATA[<h1 id="android简易计算器-四则运算"><a href="#android简易计算器-四则运算" class="headerlink" title="android简易计算器(四则运算)"></a>android简易计算器(四则运算)</h1><blockquote><p>android studio 实现简易计算器(源代码)</p></blockquote><hr><p>工程界面：<br><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fjrjs5zj6cj31hc0u0ac8.jpg" alt=""></p><blockquote><p>布局可以根据自己喜好进行更改</p></blockquote><p>activity_main.xml中的源代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:id=&quot;@+id/activity_main&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:paddingBottom=&quot;10dp&quot;</div><div class="line">    android:paddingLeft=&quot;10dp&quot;</div><div class="line">    android:paddingRight=&quot;10dp&quot;</div><div class="line">    android:paddingTop=&quot;10dp&quot;</div><div class="line">    tools:context=&quot;com.example.lixuan.calculator.MainActivity&quot;&gt;</div><div class="line"></div><div class="line">    &lt;EditText</div><div class="line">        android:layout_width=&quot;fill_parent&quot;</div><div class="line">        android:layout_height=&quot;80dip&quot;</div><div class="line">        android:id=&quot;@+id/et_input&quot;</div><div class="line">        android:editable=&quot;false&quot;</div><div class="line">        android:gravity=&quot;right|bottom&quot;</div><div class="line">        /&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_marginTop=&quot;10dp&quot;</div><div class="line">        android:layout_width=&quot;fill_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:gravity=&quot;center&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_below=&quot;@+id/et_input&quot;</div><div class="line">        android:layout_alignParentStart=&quot;true&quot;</div><div class="line">        android:weightSum=&quot;1&quot;&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;清空&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_clear&quot;</div><div class="line">            android:layout_weight=&quot;0.54&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;删除&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_del&quot;</div><div class="line">            android:layout_weight=&quot;0.46&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;/&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_divide&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;*&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_multiply&quot;</div><div class="line">            /&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">    //第二行开始*******************************</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=&quot;fill_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:gravity=&quot;center&quot;</div><div class="line">        android:layout_marginTop=&quot;80dp&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_below=&quot;@+id/et_input&quot;</div><div class="line">        android:layout_alignParentStart=&quot;true&quot;</div><div class="line">        android:weightSum=&quot;1&quot;&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;7&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_7&quot;</div><div class="line">            android:layout_weight=&quot;0.54&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;8&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_8&quot;</div><div class="line">            android:layout_weight=&quot;0.46&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;9&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_9&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;-&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_minus&quot;</div><div class="line">            /&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">    //第三行开始********************************</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=&quot;fill_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:gravity=&quot;center&quot;</div><div class="line">        android:layout_marginTop=&quot;150dp&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_below=&quot;@+id/et_input&quot;</div><div class="line">        android:layout_alignParentStart=&quot;true&quot;</div><div class="line">        android:weightSum=&quot;1&quot;&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;4&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_4&quot;</div><div class="line">            android:layout_weight=&quot;0.54&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;5&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_5&quot;</div><div class="line">            android:layout_weight=&quot;0.46&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;6&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_6&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;+&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_plus&quot;</div><div class="line">            /&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">    //第四行***************************************************************</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=&quot;fill_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:gravity=&quot;center&quot;</div><div class="line">        android:layout_marginTop=&quot;220dp&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_below=&quot;@+id/et_input&quot;</div><div class="line">        android:layout_alignParentStart=&quot;true&quot;</div><div class="line">        android:weightSum=&quot;1&quot;&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;1&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_1&quot;</div><div class="line">            android:layout_weight=&quot;0.54&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;60dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;2&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_2&quot;</div><div class="line">            android:layout_weight=&quot;0.46&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;3&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_3&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;59dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;0&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_0&quot;</div><div class="line">            /&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">    &lt;LinearLayout</div><div class="line">        android:layout_width=&quot;fill_parent&quot;</div><div class="line">        android:layout_height=&quot;wrap_content&quot;</div><div class="line">        android:gravity=&quot;center&quot;</div><div class="line">        android:layout_marginTop=&quot;290dp&quot;</div><div class="line">        android:orientation=&quot;horizontal&quot;</div><div class="line">        android:layout_below=&quot;@+id/et_input&quot;</div><div class="line">        android:layout_alignParentStart=&quot;true&quot;</div><div class="line">        android:weightSum=&quot;1&quot;&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;95dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;.&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_point&quot;</div><div class="line">            android:layout_weight=&quot;0.66&quot;</div><div class="line">            /&gt;</div><div class="line">        &lt;Button</div><div class="line">            android:layout_width=&quot;223dp&quot;</div><div class="line">            android:layout_height=&quot;74dp&quot;</div><div class="line">            android:text=&quot;=&quot;</div><div class="line">            android:textSize=&quot;20sp&quot;</div><div class="line">            android:id=&quot;@+id/btn_equal&quot;</div><div class="line">            android:layout_weight=&quot;0.24&quot;</div><div class="line">            /&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">&lt;/RelativeLayout&gt;</div></pre></td></tr></table></figure><hr><blockquote><p>下面是MainActivity.java代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div></pre></td><td class="code"><pre><div class="line">package com.example.lixuan.calculator;</div><div class="line"></div><div class="line">import android.support.v7.app.AppCompatActivity;</div><div class="line">import android.os.Bundle;</div><div class="line">import android.view.View;</div><div class="line">import android.widget.Button;</div><div class="line">import android.widget.EditText;</div><div class="line"></div><div class="line">public class MainActivity extends AppCompatActivity implements View.OnClickListener &#123;</div><div class="line">    Button btn_0 ; //数字按钮</div><div class="line">    Button btn_1;</div><div class="line">    Button btn_2;</div><div class="line">    Button btn_3 ;</div><div class="line">    Button btn_4 ;</div><div class="line">    Button btn_5 ;</div><div class="line">    Button btn_6 ;</div><div class="line">    Button btn_7 ;</div><div class="line">    Button btn_8 ;</div><div class="line">    Button btn_9 ;</div><div class="line">    Button btn_point ;  //小数点按钮</div><div class="line">    Button btn_clear ;  //清空按钮</div><div class="line">    Button btn_del ;    //删除按钮</div><div class="line">    Button btn_plus;    //加</div><div class="line">    Button btn_minus ;  //减</div><div class="line">    Button btn_multiply ; //乘</div><div class="line">    Button btn_divide ; //除</div><div class="line">    Button btn_equle ; //等于</div><div class="line">    EditText et_input ;</div><div class="line">    boolean clear_flag ;//清空标识</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        btn_0 = (Button) findViewById(R.id.btn_0) ;</div><div class="line">        btn_1 = (Button) findViewById(R.id.btn_1) ;</div><div class="line">        btn_2 = (Button) findViewById(R.id.btn_2) ;</div><div class="line">        btn_3 = (Button) findViewById(R.id.btn_3) ;</div><div class="line">        btn_4 = (Button) findViewById(R.id.btn_4) ;</div><div class="line">        btn_5 = (Button) findViewById(R.id.btn_5) ;</div><div class="line">        btn_6 = (Button) findViewById(R.id.btn_6) ;</div><div class="line">        btn_7 = (Button) findViewById(R.id.btn_7) ;</div><div class="line">        btn_8 = (Button) findViewById(R.id.btn_8) ;</div><div class="line">        btn_9 = (Button) findViewById(R.id.btn_9) ;</div><div class="line">        btn_point = (Button) findViewById(R.id.btn_point) ;</div><div class="line">        btn_clear = (Button) findViewById(R.id.btn_clear) ;</div><div class="line">        btn_del = (Button) findViewById(R.id.btn_del) ;</div><div class="line">        btn_plus = (Button) findViewById(R.id.btn_plus) ;</div><div class="line">        btn_minus = (Button) findViewById(R.id.btn_minus) ;</div><div class="line">        btn_multiply = (Button) findViewById(R.id.btn_multiply) ;</div><div class="line">        btn_divide = (Button) findViewById(R.id.btn_divide) ;</div><div class="line">        btn_equle = (Button) findViewById(R.id.btn_equal) ;</div><div class="line">//以上实例化按钮</div><div class="line">        et_input = (EditText) findViewById(R.id.et_input);  //实例化之后的显示屏</div><div class="line"></div><div class="line">        btn_0.setOnClickListener(this);</div><div class="line">        btn_1.setOnClickListener(this);</div><div class="line">        btn_2.setOnClickListener(this);</div><div class="line">        btn_3.setOnClickListener(this);</div><div class="line">        btn_4.setOnClickListener(this);</div><div class="line">        btn_5.setOnClickListener(this);</div><div class="line">        btn_6.setOnClickListener(this);</div><div class="line">        btn_7.setOnClickListener(this);</div><div class="line">        btn_8.setOnClickListener(this);</div><div class="line">        btn_9.setOnClickListener(this);</div><div class="line">        btn_point.setOnClickListener(this);</div><div class="line">        btn_clear.setOnClickListener(this);</div><div class="line">        btn_del.setOnClickListener(this);</div><div class="line">        btn_plus.setOnClickListener(this);</div><div class="line">        btn_minus.setOnClickListener(this);</div><div class="line">        btn_multiply.setOnClickListener(this);</div><div class="line">        btn_divide.setOnClickListener(this);</div><div class="line">        btn_equle.setOnClickListener(this);</div><div class="line">        //设置以上按钮的点击事件</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onClick(View v) &#123;</div><div class="line">        String str = et_input.getText().toString();</div><div class="line">        switch (v.getId()) &#123;</div><div class="line">            case R.id.btn_0:</div><div class="line">            case R.id.btn_1:</div><div class="line">            case R.id.btn_2:</div><div class="line">            case R.id.btn_3:</div><div class="line">            case R.id.btn_4:</div><div class="line">            case R.id.btn_5:</div><div class="line">            case R.id.btn_6:</div><div class="line">            case R.id.btn_7:</div><div class="line">            case R.id.btn_8:</div><div class="line">            case R.id.btn_9:</div><div class="line">            case R.id.btn_point:</div><div class="line">                if (clear_flag) &#123;</div><div class="line">                    clear_flag =false ;</div><div class="line">                    str =&quot;&quot; ;</div><div class="line">                    et_input.setText(&quot;&quot;);</div><div class="line">                &#125;</div><div class="line">                et_input.setText(str + ((Button)v).getText());</div><div class="line">                break ;</div><div class="line">            case R.id.btn_plus:</div><div class="line">            case R.id.btn_minus:</div><div class="line">            case R.id.btn_multiply:</div><div class="line">            case R.id.btn_divide:</div><div class="line">                if (clear_flag) &#123;</div><div class="line">                    clear_flag =false ;</div><div class="line">                    str =&quot;&quot; ;</div><div class="line">                    et_input.setText(&quot;&quot;);</div><div class="line">                &#125;</div><div class="line">                et_input.setText(str+ &quot; &quot; + ((Button)v).getText()+&quot; &quot;);</div><div class="line">                break;</div><div class="line">            case R.id.btn_del:</div><div class="line">                if (clear_flag) &#123;</div><div class="line">                    clear_flag =false ;</div><div class="line">                    str =&quot;&quot; ;</div><div class="line">                    et_input.setText(&quot;&quot;);</div><div class="line">                &#125;else if (str!=null&amp;&amp;!str.equals(&quot;&quot;))&#123;</div><div class="line">                    et_input.setText(str.substring(0,str.length()-1));</div><div class="line">                &#125;</div><div class="line">                break;</div><div class="line">            case R.id.btn_clear:</div><div class="line">                clear_flag =false ;</div><div class="line">                str =&quot;&quot; ;</div><div class="line">                et_input.setText(&quot;&quot;);</div><div class="line">            case R.id.btn_equal:</div><div class="line">                getResult();</div><div class="line">                break ;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    //单独的调用运算结果</div><div class="line">    private void getResult()&#123;</div><div class="line">        String exp = et_input.getText().toString();</div><div class="line">        if (exp == null||exp.equals(&quot;&quot;))&#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        if(!exp.contains(&quot; &quot;)) &#123;</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line">        if (clear_flag)&#123;</div><div class="line">            clear_flag = false ;</div><div class="line">            return;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        clear_flag = true ;</div><div class="line">        double result = 0 ;</div><div class="line">        String s1 = exp.substring(0,exp.indexOf(&quot; &quot;)); //运算符前面的字符串</div><div class="line">        String op = exp.substring(exp.indexOf(&quot; &quot;)+1,exp.indexOf(&quot; &quot;)+2) ;</div><div class="line">        String s2 = exp.substring(exp.indexOf(&quot; &quot;)+3) ;</div><div class="line">        if (!s1.equals(&quot; &quot;)&amp;&amp;!s2.equals(&quot; &quot;))&#123;</div><div class="line">            double d1 = Double.parseDouble(s1) ;</div><div class="line">            double d2 = Double.parseDouble(s2) ;</div><div class="line">            if (op.equals(&quot;+&quot;))&#123;</div><div class="line">                result = d1 + d2 ;</div><div class="line"></div><div class="line">            &#125;else  if (op.equals(&quot;-&quot;))&#123;</div><div class="line">                result = d1 - d2 ;</div><div class="line"></div><div class="line">            &#125;else  if (op.equals(&quot;*&quot;))&#123;</div><div class="line">                result = d1 * d2 ;</div><div class="line"></div><div class="line">            &#125;else  if (op.equals(&quot;/&quot;))&#123;</div><div class="line">                if(d2 == 0)&#123;</div><div class="line">                    result = 0 ;</div><div class="line">                &#125;else &#123;</div><div class="line">                    result = d1/d2 ;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if (s1.contains(&quot;.&quot;)&amp;&amp;s2.contains(&quot;.&quot;)) &#123;</div><div class="line">                int r = (int) result;</div><div class="line">                et_input.setText(r+&quot;&quot;);</div><div class="line">            &#125;else &#123;</div><div class="line">                et_input.setText(result+&quot;&quot;);</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;else if (!s1.equals(&quot;&quot;)&amp;&amp;s2.equals(&quot;&quot;))&#123;</div><div class="line">            et_input.setText(exp);</div><div class="line">        &#125;else if (s1.equals(&quot;&quot;)&amp;&amp;!s2.equals(&quot;&quot;))&#123;</div><div class="line">            double d2 = Double.parseDouble(s2) ;</div><div class="line">            if (op.equals(&quot;+&quot;))&#123;</div><div class="line">                result = 0 + d2 ;</div><div class="line"></div><div class="line">            &#125;else  if (op.equals(&quot;-&quot;))&#123;</div><div class="line">                result = 0 - d2 ;</div><div class="line"></div><div class="line">            &#125;else  if (op.equals(&quot;*&quot;))&#123;</div><div class="line">                result = 0 ;</div><div class="line"></div><div class="line">            &#125;else  if (op.equals(&quot;/&quot;))&#123;</div><div class="line">                result = 0 ;</div><div class="line">            &#125;</div><div class="line">            if (s2.contains(&quot;.&quot;)) &#123;</div><div class="line">                int r = (int) result;</div><div class="line">                et_input.setText(r+&quot;&quot;);</div><div class="line">            &#125;else &#123;</div><div class="line">                et_input.setText(result+&quot;&quot;);</div><div class="line">            &#125;</div><div class="line">        &#125;else &#123;</div><div class="line">            et_input.setText(&quot;&quot;);</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p></blockquote><hr><p>最后是AndroidMainfest.xml中的一些设置，代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    package=&quot;com.example.lixuan.calculator&quot;&gt;</div><div class="line"></div><div class="line">    &lt;application</div><div class="line"></div><div class="line">        android:allowBackup=&quot;true&quot;</div><div class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</div><div class="line">        android:label=&quot;@string/app_name&quot;</div><div class="line">        android:supportsRtl=&quot;true&quot;</div><div class="line">        android:theme=&quot;@style/AppTheme&quot;&gt;</div><div class="line">        &lt;activity android:name=&quot;.MainActivity&quot;&gt;</div><div class="line">            &lt;intent-filter&gt;</div><div class="line">                &lt;action</div><div class="line"></div><div class="line">                    android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class="line"></div><div class="line">                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class="line">            &lt;/intent-filter&gt;</div><div class="line">        &lt;/activity&gt;</div><div class="line">    &lt;/application&gt;</div><div class="line"></div><div class="line">&lt;/manifest&gt;</div></pre></td></tr></table></figure></p><hr><h4 id="我没有用第三方的虚拟机来测试，直接在AS中新建了一个虚拟设备，稍稍有点卡顿，还是建议大家使用第三方模拟器，如genymotion-mumu等。测试效果："><a href="#我没有用第三方的虚拟机来测试，直接在AS中新建了一个虚拟设备，稍稍有点卡顿，还是建议大家使用第三方模拟器，如genymotion-mumu等。测试效果：" class="headerlink" title="我没有用第三方的虚拟机来测试，直接在AS中新建了一个虚拟设备，稍稍有点卡顿，还是建议大家使用第三方模拟器，如genymotion,mumu等。测试效果："></a>我没有用第三方的虚拟机来测试，直接在AS中新建了一个虚拟设备，稍稍有点卡顿，还是建议大家使用第三方模拟器，如genymotion,mumu等。测试效果：</h4><p><img src="https://ws2.sinaimg.cn/large/006tNc79gy1fjrkaq83stj30cl0j2q49.jpg" alt=""></p><p><img src="https://ws3.sinaimg.cn/large/006tNc79gy1fjrkanhto8j30cm0j9dgu.jpg" alt=""></p>]]></content>
      
      
        <tags>
            
            <tag> android studio </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>一部手机的最高礼遇</title>
      <link href="/2017/09/16/%E4%B8%80%E9%83%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%9C%80%E9%AB%98%E7%A4%BC%E9%81%87/"/>
      <url>/2017/09/16/%E4%B8%80%E9%83%A8%E6%89%8B%E6%9C%BA%E7%9A%84%E6%9C%80%E9%AB%98%E7%A4%BC%E9%81%87/</url>
      <content type="html"><![CDATA[<h2 id="废旧手机也可以成为艺术-——-iphone4的拆解裱装"><a href="#废旧手机也可以成为艺术-——-iphone4的拆解裱装" class="headerlink" title="废旧手机也可以成为艺术 —— iphone4的拆解裱装"></a>废旧手机也可以成为艺术 —— iphone4的拆解裱装</h2><hr><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjlmfnpphoj31kw11xjxa.jpg" alt=""></p><blockquote><p>其实很早之前就看到过有关此类的文章，但那时心里想的是“谁那么有闲钱会把好好的手机拆了挂起来。”可能你也会这么想，但哪天如果你闲下来，看着换代的电子产品，与其让他们在角落里吃灰，不如给闲置的它们一个最高的礼遇，下面的内容会对你有些帮助。</p><p>每一款手机都有着曾经辉煌过的时光，因为它们的配置放在当下可能已经落后太多，但是比起放在抽屉里落灰，将手机装裱起来，大概是一个最有情怀的结局了。这款iphone4在苹果的产品历史上实在是太过经典，占有相当重的分量。也给我留下了很多回忆，伴随我走过大学和军营，机身还算保养的完好。如今iphone已经更新到了iphone x,这款iphone4就当是对iphone10周年的致敬吧。</p></blockquote><p>整个过程大约需要3到4个小时左右完成，建议吃饱喝足找个小伙伴一起参与，体验感会更好。(ps：尽量不要拉女生来帮忙，女孩子大概心里只会想这是什么鬼啦！)哈哈，闲话不多说，进入正题。</p><h3 id="工具准备"><a href="#工具准备" class="headerlink" title="工具准备"></a>工具准备</h3><ul><li>iphone4 一部</li><li>iphone专用螺丝刀一套 </li><li>B-7000工具胶，502胶</li><li>塑料撬片 镊子</li><li>标本框(我选的是A4大小 因为是4所以刚刚好，大一点的手机可以考虑A3尺寸)</li><li>白色硬卡纸(颜色自选，白色底板配黑色零件更美观)</li></ul><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjlj0um20ej31kw16odpe.jpg" alt=""></p><hr><h3 id="拆解步骤"><a href="#拆解步骤" class="headerlink" title="拆解步骤"></a>拆解步骤</h3><p>1.拆开手机底部两颗螺丝，向上推约2cm取下手机后盖</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fjlj37o7k0j30gg0cct8x.jpg" alt=""></p><p>2.拧下电池扣屏蔽罩的小螺丝 </p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjlj4q22tsj30gg0cc3yy.jpg" alt=""></p><p>3.用塑料撬棒小心将电池排线从主板分离开</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjlj6rlfgrj30gg0ccgm7.jpg" alt=""></p><p>4.用塑料拉片将电池小心拉出</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fjlj8l5vj2j30gg0ccaae.jpg" alt=""></p><p>5.推出sim卡槽，取出sim卡，最简单的一步</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjlj98xbrqj30gg0ccgls.jpg" alt=""></p><p>6.取下如图两颗螺丝</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjlj9p03nkj30gg0cc0tb.jpg" alt=""></p><p>7.用撬棒将固定片从主板取下</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjljb29eh5j30gg0ccwey.jpg" alt=""></p><p>8.小心拉起带状尾插排线</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fjljbosqxmj30gg0cbt9a.jpg" alt=""></p><p>9.撬开天线排线如图</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjljehdopcj30gg0cbq3e.jpg" alt=""></p><p>10.取下左下角主板上的一颗螺丝</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjljf1def0j30gg0ccmxo.jpg" alt=""></p><p>11.取下上部Wi-Fi模块的5颗螺丝</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjljfvizm1j30gg0ccwet.jpg" alt=""></p><p>12.用撬棒小心撬开主板上天线排线</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fjljxcyowmj30gg0cbt93.jpg" alt=""></p><p>13.用撬棒撬开后置摄像头排线，小心取下摄像头</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjljy0gse6j30gg0cc0t6.jpg" alt=""></p><p>14.取下下图中的螺丝</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjljz60zqyj30gg0cczkw.jpg" alt=""></p><p>15.用塑料撬棒松开主板座子上的排线，依次为：</p><ul><li>触摸排线（从底部撬起）</li><li>显示排线（从底部撬起）</li><li>耳机插孔和音量键排线（从顶部撬起）</li><li>顶部麦克风和电源键排线（从顶部撬起）</li><li>前置摄像头排线（从顶部撬起）</li></ul><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fjlk1l5lx5j30gg0cbgm2.jpg" alt=""></p><p>16.这颗螺丝是平口的，需要用到平口螺丝刀，小心取下支架螺丝</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fjlk2f1ygoj30gg0cct96.jpg" alt=""></p><p>17.从机身中小心取下主板</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fjlk2uwlqpj30gg0ccjru.jpg" alt=""></p><p>18.取下扬声器模块螺丝，从机身中小心取下扬声器</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fjlk3lqupxj30gg0cc74h.jpg" alt=""><br><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjlk40aaumj30gg0ccq3c.jpg" alt=""></p><p>19.取下震动器螺丝，小心取下震动器</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fjlk4j4aahj30gg0ccmxd.jpg" alt=""><br><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjlk6211v6j30gg0cbwex.jpg" alt=""></p><p>20.取下前面板固定螺丝</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjlk77b8dsj30gg0cbt8x.jpg" alt=""></p><p>21.取下侧面板三个大头螺丝</p><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjlk7n27n9j30gg0cbmxc.jpg" alt=""></p><p>22.取下靠近麦克风螺丝</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fjlk8a5ap3j30gg0cc74g.jpg" alt=""></p><p>23.取下靠近排线处的螺丝</p><p><img src="https://ws1.sinaimg.cn/large/006tKfTcgy1fjlk8r8n99j30gg0cbgls.jpg" alt=""></p><p>24.取下靠近sim卡槽的三颗大螺丝 和靠近后置摄像头的螺丝</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjlk9a2zr7j30gg0cc74m.jpg" alt=""></p><p>25.撬开面板</p><p><img src="https://ws2.sinaimg.cn/large/006tKfTcgy1fjlk9xkfh1j30gg0ccglu.jpg" alt=""></p><p>26.小心取下前面板(注意排线)</p><p><img src="https://ws4.sinaimg.cn/large/006tKfTcgy1fjlkahgj3tj30gg0cbwes.jpg" alt=""></p><hr><blockquote><p>至此主体基本上就拆解完成了，当然如果你的标本框还有空间，你还可以进一步将前置摄像头，话筒，音响等小部件从主板上拆下，加入一些自己的独特风格。拆下的小零件我没有进行清洗，主要是因为太懒。</p><p>接下来就是拆机零件的排版布局了，这一步相当重要，直接决定了最终成品的效果。每个人的风格不同，大体就是先确定大部件的位置，再将零部件填方进去，这样就不会没思路了。粘放小螺丝是整个过程中最磨人的一个环节，很难对齐。建议大家可以先在底板上多尝试几次，或者参考一下别人的成品。我因为没有选购A3尺寸的标本框，不得已舍弃了一些部件。摆放时尽可能让部件横平竖直，显的更有美学味道。最后还是要感谢一下好基友Liang，整个过程是我和Liang共同完成的，我负责拆，他负责摆。整体效率快了不少，一个上午就可以搞定。</p></blockquote><p><img src="https://ws3.sinaimg.cn/large/006tKfTcgy1fjlkedljhqj31kw16p47w.jpg" alt=""></p><blockquote><p>当所有零部件全部摆好粘贴好之后，静置几个小时等胶干。将半成品小心装入框内，就可以挂起来欣赏了，虽然看起来不是那么容易完成，但是做好之会有很大的成就感，简直就是一件艺术品！动手能力强的朋友们一定要试一试哦。</p></blockquote><p><code>PS：拆解工具某宝自行搜索大概20元左右，标本框30元左右，整个体验感还是不错的，尤其是在拆解的过程中也顺便学习了解了手机的部件构造。文中部分图片引自ifixit官方网站。对拆解过程如有疑问，请移步微博留言。</code></p>]]></content>
      
      <categories>
          
          <category> 艺术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iphone拆解 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>sublime text3 MacOS X的C环境搭建</title>
      <link href="/2017/09/14/sublime-text3-MacOS-X%E7%9A%84C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
      <url>/2017/09/14/sublime-text3-MacOS-X%E7%9A%84C%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h1 id="Sublime-Text3-的C环境搭建"><a href="#Sublime-Text3-的C环境搭建" class="headerlink" title="Sublime Text3 的C环境搭建"></a>Sublime Text3 的C环境搭建</h1><hr><p><img src="https://ws2.sinaimg.cn/large/006tKfTcly1fjj7bmzswvj30j90kldgp.jpg" alt=""></p><blockquote><p>有时想运行调试一个小的C语言程序，不想动用VB等庞大的IDE，sublime就成了一个不错的选择，其自身的自动补全，语法高亮等功能非常适合对颜值和效率有要求的朋友。但sublime只是一个编译器，想要运行C程序，还得进行环境的配置，好在其有丰富的插件库供用户选择，网上查了许多mac下的C环境配置，现将搭建步骤分享给大家～供大家参考。</p></blockquote><h4 id="1-打开sublime-text3，选择Tools-工具-gt-Build-System-编译系统-gt-New-Build-System-新建编译系统-将下列代码复制替换进去"><a href="#1-打开sublime-text3，选择Tools-工具-gt-Build-System-编译系统-gt-New-Build-System-新建编译系统-将下列代码复制替换进去" class="headerlink" title="1.打开sublime text3，选择Tools(工具)-&gt;Build System(编译系统)-&gt;New Build System(新建编译系统).将下列代码复制替换进去"></a>1.打开sublime text3，选择Tools(工具)-&gt;Build System(编译系统)-&gt;New Build System(新建编译系统).将下列代码复制替换进去</h4><p><code>{&quot;cmd&quot;: [&quot;gcc&quot;, &quot;${file}&quot;, &quot;-o&quot;, &quot;${file_path}/${file_base_name}&quot;],&quot;file_regex&quot;: &quot;^(..[^:]*):([0-9]+):?([0-9]+)?:? (.*)$&quot;,&quot;working_dir&quot;: &quot;${file_path}&quot;,&quot;selector&quot;: &quot;source.c, source.c++&quot;,&quot;variants&quot;:[{&quot;name&quot;: &quot;Run&quot;,&quot;cmd&quot; : [&quot;${file_path}/${file_base_name}&quot;]}]}</code></p><h4 id="2-保存为C-sublime-build-之后在Tools-工具-gt-Build-System-编译系统-里选择刚才配置的环境C"><a href="#2-保存为C-sublime-build-之后在Tools-工具-gt-Build-System-编译系统-里选择刚才配置的环境C" class="headerlink" title="2.保存为C.sublime.build 之后在Tools(工具)-&gt;Build System(编译系统)里选择刚才配置的环境C"></a>2.保存为C.sublime.build 之后在Tools(工具)-&gt;Build System(编译系统)里选择刚才配置的环境C</h4><p><img src="https://ws4.sinaimg.cn/large/006tKfTcly1fjj7clg4p4j30b80cst94.jpg" alt=""></p><h4 id="3-环境配置好后，就可以新建一个程序例如Helloworld，文件保存时结尾为-c-然后shift-command-B-选择c编译运行即可"><a href="#3-环境配置好后，就可以新建一个程序例如Helloworld，文件保存时结尾为-c-然后shift-command-B-选择c编译运行即可" class="headerlink" title="3.环境配置好后，就可以新建一个程序例如Helloworld，文件保存时结尾为.c 然后shift + command + B 选择c编译运行即可"></a>3.环境配置好后，就可以新建一个程序例如Helloworld，文件保存时结尾为.c 然后shift + command + B 选择c编译运行即可</h4><blockquote><p>因为结果是直接显示在sublime里的控制台上，目前不支持用户输入，所以比较麻烦，而mac上的Xcode却可以输入，大家自行选择。</p></blockquote>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sublime </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搭建属于自己的博客</title>
      <link href="/2017/09/12/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2017/09/12/%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<h1 id="如何利用GitHub-Hexo搭建属于自己的博客"><a href="#如何利用GitHub-Hexo搭建属于自己的博客" class="headerlink" title="如何利用GitHub+Hexo搭建属于自己的博客"></a>如何利用GitHub+Hexo搭建属于自己的博客</h1><hr><h2 id="新手快速上路"><a href="#新手快速上路" class="headerlink" title="新手快速上路"></a>新手快速上路</h2><p><img src="/images/sticker-mule-189122.jpg" alt="lovely cat"></p><blockquote><p><strong>最近在学习markdown的语法，真的觉得很良心，易学上手。在搭建博客的同时，发现简书[<a href="http://www.jianshu.com" target="_blank" rel="external">http://www.jianshu.com</a>]<br>这个网站上有很多干货,特别是有关技术方面的，很适合喜欢自我探索的朋友，安利大家探索一下，可以学习到很多知识。之前好友Liang写了一篇文章是关于如何快速搭建博客，我觉得对刚刚入门的新手很有帮助，特意分享给大家。</strong></p><p>链接网址：[<a href="https://isliangj.github.io/2017/09/08/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/" target="_blank" rel="external">https://isliangj.github.io/2017/09/08/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</a>]</p><p><strong>转载的网址，非本文作者原创，转载需注明。</strong></p></blockquote>]]></content>
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello Guys</title>
      <link href="/2017/09/11/hello-world/"/>
      <url>/2017/09/11/hello-world/</url>
      <content type="html"><![CDATA[<p><img src="/images/mayur-gala-487.jpg" alt="love"></p><p>Welcome to my blog(<a href="https://leexuan0128.github.io/)!" target="_blank" rel="external">https://leexuan0128.github.io/)!</a> This is a free place! I will be going to write any interesting and valueable posts.Expecting your comments. Absolutely,I will record the process of my first installation，sharing some useful information if you need～</p><h2 id="Freshman-Guide-How-to-creat-a-new-blog"><a href="#Freshman-Guide-How-to-creat-a-new-blog" class="headerlink" title="Freshman Guide(How to creat a new blog)"></a>Freshman Guide(How to creat a new blog)</h2><h3 id="Github！"><a href="#Github！" class="headerlink" title="Github！"></a>Github！</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">First，you need a Github account,and <span class="keyword">then</span> building yourself repositories <span class="keyword">in</span> it.</div></pre></td></tr></table></figure><p>More info: <a href="https://github.com/" target="_blank" rel="external">Github</a></p><h3 id="Environment"><a href="#Environment" class="headerlink" title="Environment"></a>Environment</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">You still need the environment of the Hexo,before this，you should verify you had installed the environment of Git and Node.js. Tips：searching on the google how to install git and node.js.</div></pre></td></tr></table></figure><p>More info: <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></p><h3 id="Creat-local-site"><a href="#Creat-local-site" class="headerlink" title="Creat local site"></a>Creat local site</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">After above stages,you can creat your <span class="built_in">local</span> site now!you can name a folder whatever you want.</div></pre></td></tr></table></figure><p>More info: <a href="https://github.com/bubkoo/hexo-filter-flowchart" target="_blank" rel="external">site</a></p><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Modify your <span class="built_in">local</span> files(_config.yml),including your custom theme and style.</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/themes/" target="_blank" rel="external">Themes</a></p><h3 id="This-is-a-simplified-tutorials-following-days-I-will-offer-a-specific-version"><a href="#This-is-a-simplified-tutorials-following-days-I-will-offer-a-specific-version" class="headerlink" title="This is a simplified tutorials,following days I will offer a specific version."></a>This is a simplified tutorials,following days I will offer a specific version.</h3>]]></content>
      
      
    </entry>
    
  
  
</search>
